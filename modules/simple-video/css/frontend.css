@keyframes fade-in{0%{opacity:0}100%{opacity:1}}@keyframes fade-out{0%{opacity:0}5%{opacity:1}100%{opacity:0}}#simplevideos-wrapper{cursor:move;cursor:-webkit-grab;cursor:-moz-grab;cursor:grab;max-width:500px;overflow:hidden}#simplevideos-wrapper .post-ms-header{position:absolute;top:18px}#simplevideos{position:relative}.simple-video{display:flex;justify-content:center;align-items:center;height:125px}.simple-video picture{height:125px;transform:scale(0.7);border-radius:11px;background-color:#efefef;overflow:hidden;position:relative;display:flex;justify-content:center;transition:250ms linear transform}.simple-video picture .playbtn{display:none}.simple-video.expand picture{transform:scale(1)}.simple-video.expand picture .playbtn{display:block;color:#fff;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}.simple-video.expand picture .playbtn i{opacity:.7}.simple-video.expand picture .playbtn:hover i{opacity:1}.simple-video picture img{object-position:50% 50%;object-fit:cover}.simple-video picture a.title{position:absolute;bottom:5rem;left:2rem;margin-right:2rem}.simple-video picture a.title span{display:inline;font-family:IBM Plex Mono, monospace;background-color:#fff;color:#000;font-weight:400;box-decoration-break:clone;-webkit-box-decoration-break:clone;font-size:14px;padding:3px 5px;text-decoration:underline;text-decoration-skip:ink;text-decoration-skip-ink:auto}.siema-nav-wrapper.simplevideos{display:flex;justify-content:flex-end;margin:0px auto 20px;max-width:1200px}.siema-nav-wrapper.simplevideos .siema-nav{position:relative;z-index:1;display:flex;white-space:nowrap;width:70px}.siema-nav-wrapper.simplevideos .siema-nav button{border:0;background:none;margin:0 5px 0 0;padding:0;font-family:inherit;cursor:pointer;-webkit-appearance:none;position:relative;z-index:1000;display:flex;white-space:nowrap;height:35px;width:35px}.siema-nav-wrapper.simplevideos .siema-nav button .icon{height:24px}.siema-nav-wrapper.simplevideos .siema-nav button .next.icon{-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg)}.siema-nav-wrapper.simplevideos .siema-nav button:focus{outline:none}

/*# sourceURL=webpack://./../../../../../../lib/assets/scss/lib/_mixins.scss */
/*# sourceURL=webpack://./frontend.scss */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */