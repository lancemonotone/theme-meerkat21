@keyframes fade-in{0%{opacity:0}100%{opacity:1}}@keyframes fade-out{0%{opacity:0}5%{opacity:1}100%{opacity:0}}.wmsstats{border-left:2px solid rgba(255,190,10,0.2);border-right:2px solid rgba(255,190,10,0.2);cursor:move;cursor:-webkit-grab;cursor:-moz-grab;cursor:grab}.wmsstats .stat{padding:10px 34px;width:auto;font-size:15px;line-height:22px;position:relative}.wmsstats .stat:before{content:"";position:absolute;top:0;bottom:0;left:-2px;width:2px;background-color:rgba(255,190,10,0.2)}.wmsstats .stat .numberhr-l{font-family:IBM Plex Sans, monospace;font-size:2.5em;margin-bottom:15px;line-height:27px;text-transform:uppercase}.wmsstats .stat .numberhr-l .units{font-size:20px;vertical-align:super;margin-left:4px}.wmsstats .stat .numberhr-lm{font-family:IBM Plex Sans, monospace;font-size:1.9em;line-height:29px;text-transform:uppercase;font-weight:500;padding:9px 0}.wmsstats .stat .numberhr-lm .units{font-size:20px;vertical-align:super;margin-left:4px}.wmsstats .stat .numberhr-m{font-family:IBM Plex Sans, monospace;font-size:1.6em;line-height:29px;text-transform:uppercase;font-weight:500}.wmsstats .stat .numberhr-m .units{font-size:20px;vertical-align:super;margin-left:4px}.wmsstats .stat .numberhr-s{font-family:IBM Plex Sans, monospace;font-size:1.1em;text-transform:uppercase;font-weight:600;padding:8px 0}.wmsstats .stat .numberhr-s .units{font-size:20px;vertical-align:super;margin-left:4px}.wmsstats .stat+.stat{border-left:0}.siema-nav-wrapper.wmsstats{display:flex;justify-content:flex-end;height:15px;margin-bottom:15px;background-color:#fff;border:none}.siema-nav-wrapper.wmsstats .siema-nav{position:relative;z-index:1000;display:flex;white-space:nowrap;width:70px}.siema-nav-wrapper.wmsstats .siema-nav button{border:0;background:none;margin:0 5px 0 0;padding:0;font-family:inherit;cursor:pointer;-webkit-appearance:none;position:relative;z-index:1000;display:flex;white-space:nowrap;height:35px;width:35px}.siema-nav-wrapper.wmsstats .siema-nav button .icon{height:25px;width:25px}.siema-nav-wrapper.wmsstats .siema-nav button .next.icon{-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg)}@media only screen and (min-width: 910px){.siema-nav-wrapper.wmsstats{display:none}.wmsstats{cursor:default}.wmsstats .stat{cursor:default}}

/*# sourceURL=webpack://./../../../../../../lib/assets/scss/lib/_mixins.scss */
/*# sourceURL=webpack://./frontend.scss */
/*# sourceURL=webpack://./../../../../../../lib/assets/scss/lib/_variables.scss */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */