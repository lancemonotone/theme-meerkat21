{"version":3,"sources":["webpack:///./src/js/frontend.js"],"names":["removeClosest","elem","selector","closest","document","body","classList","remove","e","setup_click","getElementById","Promise","resolve","reject","setTimeout","then","addEventListener","console","log","hide_id","hide_node","event","target","getAttribute","window","supports_storage","localStorage","setItem","add","getItem","remove_id","remove_item","querySelector"],"mappings":"oBAEA,WAEE,IAAMA,EAAgB,SAAWC,EAAMC,GACrC,IACiBD,EAAKE,QAASD,GAC7BE,SAASC,KAAKC,UAAUC,OAAQ,cAGlC,MAAQC,GAIN,OAFAC,KAEO,IAwBLA,EAAc,WACbL,SAASM,eAAgB,gBAGnB,IAAIC,SAAS,SAAWC,EAASC,GACtCC,YAAY,WACVF,EAAS,qBACR,QAgBJG,MAAM,WAaL,OAXAX,SAASM,eAAgB,eAAgBM,iBAAkB,SAAS,WAClEC,QAAQC,IAAK,SACb,IApCyBC,EAsCnBC,EAFUC,MAAMC,OAAOnB,QAAS,gBAEZoB,aAAc,cAtCfJ,EAuCRC,EAjDF,SAAWZ,GAClC,IACE,MAAO,iBAAkBgB,QAAqC,OAA3BA,OAAM,aAE3C,MAAQhB,GACN,OAAO,GAOJiB,IACHC,aAAaC,QAAS,eAAgBR,GAsChCnB,EAAeqB,MAAMC,OAAQ,0BApB1B,IAAIX,SAAS,SAAWC,EAASC,GACtCC,YAAY,WACVF,EAAS,qBACR,WAwBJG,MAAM,WAELX,SAASC,KAAKC,UAAUsB,IAAK,kBAMrC,GAAKF,aAAaG,QAAS,gBAAmB,EAAI,CAEhD,IAAMC,EAAYJ,aAAaG,QAAS,gBAClCE,EAAc3B,SAAS4B,cAAT,uBAAwCF,EAAxC,OAEpB9B,EAAe+B,EAAa,4BAG5BtB,IA3FJ,I","file":"frontend.js","sourcesContent":["\"use strict\";\n\n(function () {\n  //remove parent\n  const removeClosest = function ( elem, selector ) {\n    try {\n      const parent = elem.closest( selector );\n      document.body.classList.remove( \"alert-open\" );\n      // parent.parentNode.removeChild(parent);\n    }\n    catch ( e ) {\n      //setup if message has changed\n      setup_click();\n\n      return false;\n    }\n  };\n\n  //function to check if localstorage is supported\n  const supports_storage = function ( e ) {\n    try {\n      return 'localStorage' in window && window['localStorage'] !== null;\n    }\n    catch ( e ) {\n      return false;\n    }\n  };\n\n  //remove emergency msg or add message for non-support\n  const dont_show_alert = function ( hide_id ) {\n    /* Set localstorage to hide this item */\n    if ( supports_storage() ) {\n      localStorage.setItem( 'wms_noalerts', hide_id );\n    }\n\n  };\n\n  //click event\n  const setup_click = function () {\n    if ( document.getElementById( 'alert-close' ) ) {\n\n      const job1 = function () {\n        return new Promise( function ( resolve, reject ) {\n          setTimeout( function () {\n            resolve( 'result of job 1' );\n          }, 1000 );\n        } );\n      };\n\n      const job2 = function () {\n        return new Promise( function ( resolve, reject ) {\n          setTimeout( function () {\n            resolve( 'result of job 2' );\n          }, 1000 );\n        } );\n      };\n\n      const promise = job1();\n\n      promise\n\n        .then( function () {\n          //setup click event\n          document.getElementById( 'alert-close' ).addEventListener( 'click', function () {\n            console.log( 'click' );\n            const wrapper = event.target.closest( '#alert-close' );\n\n            const hide_node = wrapper.getAttribute( \"data-alert\" );\n            dont_show_alert( hide_node );\n\n            removeClosest( event.target, '.fl-builder-content' );\n\n          } );\n\n          return job2();\n        } )\n\n        .then( function () {\n          //make visible\n          document.body.classList.add( \"alert-open\" );\n        } )\n    }\n  };\n\n  //if user dismissed, remove for this session\n  if ( localStorage.getItem( 'wms_noalerts' ) > 0 ) {\n\n    const remove_id = localStorage.getItem( 'wms_noalerts' );\n    const remove_item = document.querySelector( `[data-alert=\"${remove_id}\"]` );\n\n    removeClosest( remove_item, '.fl-builder-content' )\n\n  } else {\n    setup_click();\n\n  }\n})();"],"sourceRoot":""}