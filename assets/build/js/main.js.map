{"version":3,"sources":["webpack://wms.dev/./web/wp-content/themes/m21/assets/src/js/main.js","webpack://wms.dev/./web/wp-content/themes/m21/assets/src/js/modules/uisearch.js"],"names":["document","addEventListener","UISearch","el","this","inputEl","querySelector","goBtn","cancelBtn","searchBtn","_initEvents","prototype","self","initSearchFn","ev","jQuery","addClass","stopPropagation","value","trim","hasClass","preventDefault","close","open","forEach","item","keyup","e","keyCode","select","focus","setTimeout","setAttribute","bodyFn","removeEventListener","removeClass","blur","attr","getElementById","uisearch","window","event"],"mappings":"mBAEAA,SAASC,iBAAiB,oBAAoB,YCA/B,WACT,SAASC,EAAUC,IACVC,KAAKD,GAAKA,GAAM,QACjBC,KAAKC,QAAUF,EAAGG,cAAe,iCACjCF,KAAKG,MAAQJ,EAAGG,cAAc,kCAC9BF,KAAKI,UAAYL,EAAGG,cAAc,gCAClCF,KAAKK,UAAYT,SAASM,cAAc,0BACxCF,KAAKM,eAGdR,EAASS,UAAY,CACjBD,YAAa,WACV,IAAIE,EAAeR,KACnBS,EAAe,SAAUC,GAEvBC,OAAQ,mBAAoBC,SAAU,WACtCF,EAAGG,kBAGHL,EAAKP,QAAQa,MAAQN,EAAKP,QAAQa,MAAMC,OAClCJ,OAAQH,EAAKT,IAAKiB,SAAU,mBAIxBL,OAAQH,EAAKT,IAAKiB,SAAU,qBACpCN,EAAGO,iBACHT,EAAKU,UALLR,EAAGO,iBACHT,EAAKW,SAQTX,EAAKH,UAAUR,iBAAkB,QAASY,GAC1CD,EAAKH,UAAUR,iBAAiB,aAAcY,GAG9B,CAACD,EAAKP,QAAQO,EAAKL,MAAMK,EAAKJ,WACpCgB,SAAQ,SAAAC,GAChBA,EAAKxB,iBAAiB,SAAS,SAAUa,GACzCA,EAAGG,qBAEHQ,EAAKxB,iBAAiB,cAAc,SAAUa,GAC9CA,EAAGG,wBAILF,OAAQf,UAAW0B,OAAO,SAAWC,GACf,IAAbA,EAAEC,SACPhB,EAAKU,YAKbC,KAAM,WACJ,IAAIX,EAAOR,KAEXW,OAAQH,EAAKT,IAAKa,SAAU,mBAE5BJ,EAAKP,QAAQwB,SACbjB,EAAKP,QAAQyB,QAEbC,YAAY,WACVnB,EAAKP,QAAQyB,UACZ,KAEHlB,EAAKH,UAAUuB,aAAc,iBAAiB,GAG9C,IAAIC,EAAS,SAATA,EAAoBnB,GACtBF,EAAKU,QACLlB,KAAK8B,oBAAqB,QAASD,GACnC7B,KAAK8B,oBAAqB,aAAcD,IAE1CjC,SAASC,iBAAkB,QAASgC,GACpCjC,SAASC,iBAAkB,aAAcgC,IAE7CX,MAAO,WACL,IAAIV,EAAOR,KACXW,OAAOH,EAAKH,WAAW0B,YAAa,WACpCvB,EAAKH,UAAUuB,aAAc,iBAAiB,GAC9C5B,KAAKC,QAAQ+B,OACbrB,OAAQH,EAAKT,IAAKkC,KAAM,iBACxBtB,OAAQH,EAAKT,IAAKgC,YAAa,qBAKrC,IAAIjC,EAAUF,SAASsC,eAAgB,oBDpFrCC,MAGJC,OAAOvC,iBAAiB,QAAQ,SAAUwC,Q","file":"main.js","sourcesContent":["import uisearch from './modules/uisearch.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    uisearch();\n});\n\nwindow.addEventListener(\"load\", function (event) {});\n","'use strict';\n\nexport default function () {\n      function UISearch( el ) {\n          if ( this.el = el || null ) {\n              this.inputEl = el.querySelector( 'form > input.wms-navbox-input' );\n              this.goBtn = el.querySelector('form > input.wms-navbox-button');\n              this.cancelBtn = el.querySelector('form > div.wms-navbox-cancel');\n              this.searchBtn = document.querySelector('#wms-search-btn button');\n              this._initEvents();\n          }\n      }\n     UISearch.prototype = {\n         _initEvents: function () {\n            var self         = this,\n            initSearchFn = function (ev) {\n              //this is used to show a loading icon if the search button is pressed and results aren't available (usually due to a poor connection)\n              jQuery( \"#wms-search-btn\" ).addClass( \"clicked\" );\n              ev.stopPropagation();\n\n              // trim its value, and toggle\n              self.inputEl.value = self.inputEl.value.trim();\n              if ( !jQuery( self.el ).hasClass( 'wms-search-open' ) ) { //open\n                ev.preventDefault();\n                self.open();\n              }\n              else if ( jQuery( self.el ).hasClass( 'wms-search-open' )  ) { // close \n                ev.preventDefault();\n                self.close();\n              }\n            }\n\n            self.searchBtn.addEventListener( 'click', initSearchFn );\n            self.searchBtn.addEventListener('touchstart', initSearchFn);\n\n            //stop propagation to avoid bodyFn from closing\n            var exemptObj = [self.inputEl,self.goBtn,self.cancelBtn]\n            exemptObj.forEach(item => {\n              item.addEventListener('click', function (ev) {\n              ev.stopPropagation();\n            });\n              item.addEventListener('touchstart', function (ev) {\n              ev.stopPropagation();\n            });\n            })\n            //close on escape key\n            jQuery( document ).keyup( function ( e ) {\n                if ( e.keyCode == 27 ) { // escape key maps to keycode `27`\n                self.close();\n              }\n            } );\n             \n        },\n        open: function () {\n          var self = this;\n\n          jQuery( self.el ).addClass( 'wms-search-open' );\n          // focus the input\n          self.inputEl.select();\n          self.inputEl.focus();\n          //this is a non-optimal solution to bring focus on screen readers\n          setTimeout( function () {\n            self.inputEl.focus();\n          }, 300 );\n\n          self.searchBtn.setAttribute( 'aria-expanded', true );\n\n          // close the search input if body is clicked\n          var bodyFn = function ( ev ) {\n            self.close();\n            this.removeEventListener( 'click', bodyFn );\n            this.removeEventListener( 'touchstart', bodyFn );\n          };\n          document.addEventListener( 'click', bodyFn );\n          document.addEventListener( 'touchstart', bodyFn );\n    },\n      close: function () {\n        var self = this;\n        jQuery(self.searchBtn).removeClass( \"clicked\" );\n        self.searchBtn.setAttribute( 'aria-expanded', false );\n        this.inputEl.blur();\n        jQuery( self.el ).attr( 'aria-expanded' ) != 'true' ? 'true' : 'false';\n        jQuery( self.el ).removeClass( 'wms-search-open' );\n    }\n    \n  }\n\n  new UISearch( document.getElementById( 'wms-navbox-wrap' ) );\n      \n}\n\n"],"sourceRoot":""}